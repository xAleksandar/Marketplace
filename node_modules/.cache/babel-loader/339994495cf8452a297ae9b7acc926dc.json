{"ast":null,"code":"import { configure } from '../lib/configure.js';\nimport { toUrlSearchParams } from '../lib/to-url-search-params.js';\nimport { abortSignal } from '../lib/abort-signal.js';\nimport { multipartRequest } from 'ipfs-core-utils/multipart-request';\nimport { CID } from 'multiformats/cid';\nexport const createImport = configure(api => {\n  async function* dagImport(source) {\n    let options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    const controller = new AbortController();\n    const signal = abortSignal(controller.signal, options.signal);\n    const {\n      headers,\n      body\n    } = await multipartRequest(source, controller, options.headers);\n    const res = await api.post('dag/import', {\n      signal,\n      headers,\n      body,\n      searchParams: toUrlSearchParams({\n        'pin-roots': options.pinRoots\n      })\n    });\n\n    for await (const {\n      Root\n    } of res.ndjson()) {\n      if (Root !== undefined) {\n        const {\n          Cid: {\n            '/': Cid\n          },\n          PinErrorMsg\n        } = Root;\n        yield {\n          root: {\n            cid: CID.parse(Cid),\n            pinErrorMsg: PinErrorMsg\n          }\n        };\n      }\n    }\n  }\n\n  return dagImport;\n});","map":{"version":3,"sources":["/home/alex/Documents/gitest/Marketplace/node_modules/ipfs-http-client/esm/src/dag/import.js"],"names":["configure","toUrlSearchParams","abortSignal","multipartRequest","CID","createImport","api","dagImport","source","options","controller","AbortController","signal","headers","body","res","post","searchParams","pinRoots","Root","ndjson","undefined","Cid","PinErrorMsg","root","cid","parse","pinErrorMsg"],"mappings":"AAAA,SAASA,SAAT,QAA0B,qBAA1B;AACA,SAASC,iBAAT,QAAkC,gCAAlC;AACA,SAASC,WAAT,QAA4B,wBAA5B;AACA,SAASC,gBAAT,QAAiC,mCAAjC;AACA,SAASC,GAAT,QAAoB,kBAApB;AACA,OAAO,MAAMC,YAAY,GAAGL,SAAS,CAACM,GAAG,IAAI;AAC3C,kBAAgBC,SAAhB,CAA0BC,MAA1B,EAAgD;AAAA,QAAdC,OAAc,uEAAJ,EAAI;AAC9C,UAAMC,UAAU,GAAG,IAAIC,eAAJ,EAAnB;AACA,UAAMC,MAAM,GAAGV,WAAW,CAACQ,UAAU,CAACE,MAAZ,EAAoBH,OAAO,CAACG,MAA5B,CAA1B;AACA,UAAM;AAACC,MAAAA,OAAD;AAAUC,MAAAA;AAAV,QAAkB,MAAMX,gBAAgB,CAACK,MAAD,EAASE,UAAT,EAAqBD,OAAO,CAACI,OAA7B,CAA9C;AACA,UAAME,GAAG,GAAG,MAAMT,GAAG,CAACU,IAAJ,CAAS,YAAT,EAAuB;AACvCJ,MAAAA,MADuC;AAEvCC,MAAAA,OAFuC;AAGvCC,MAAAA,IAHuC;AAIvCG,MAAAA,YAAY,EAAEhB,iBAAiB,CAAC;AAAE,qBAAaQ,OAAO,CAACS;AAAvB,OAAD;AAJQ,KAAvB,CAAlB;;AAMA,eAAW,MAAM;AAACC,MAAAA;AAAD,KAAjB,IAA2BJ,GAAG,CAACK,MAAJ,EAA3B,EAAyC;AACvC,UAAID,IAAI,KAAKE,SAAb,EAAwB;AACtB,cAAM;AACJC,UAAAA,GAAG,EAAE;AAAC,iBAAKA;AAAN,WADD;AAEJC,UAAAA;AAFI,YAGFJ,IAHJ;AAIA,cAAM;AACJK,UAAAA,IAAI,EAAE;AACJC,YAAAA,GAAG,EAAErB,GAAG,CAACsB,KAAJ,CAAUJ,GAAV,CADD;AAEJK,YAAAA,WAAW,EAAEJ;AAFT;AADF,SAAN;AAMD;AACF;AACF;;AACD,SAAOhB,SAAP;AACD,CA3BoC,CAA9B","sourcesContent":["import { configure } from '../lib/configure.js';\nimport { toUrlSearchParams } from '../lib/to-url-search-params.js';\nimport { abortSignal } from '../lib/abort-signal.js';\nimport { multipartRequest } from 'ipfs-core-utils/multipart-request';\nimport { CID } from 'multiformats/cid';\nexport const createImport = configure(api => {\n  async function* dagImport(source, options = {}) {\n    const controller = new AbortController();\n    const signal = abortSignal(controller.signal, options.signal);\n    const {headers, body} = await multipartRequest(source, controller, options.headers);\n    const res = await api.post('dag/import', {\n      signal,\n      headers,\n      body,\n      searchParams: toUrlSearchParams({ 'pin-roots': options.pinRoots })\n    });\n    for await (const {Root} of res.ndjson()) {\n      if (Root !== undefined) {\n        const {\n          Cid: {'/': Cid},\n          PinErrorMsg\n        } = Root;\n        yield {\n          root: {\n            cid: CID.parse(Cid),\n            pinErrorMsg: PinErrorMsg\n          }\n        };\n      }\n    }\n  }\n  return dagImport;\n});"]},"metadata":{},"sourceType":"module"}