{"ast":null,"code":"import { CID } from 'multiformats/cid';\nimport { configure } from '../lib/configure.js';\nimport { toUrlSearchParams } from '../lib/to-url-search-params.js';\nexport const createNew = configure(api => {\n  async function newObject() {\n    let options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    const res = await api.post('object/new', {\n      signal: options.signal,\n      searchParams: toUrlSearchParams({\n        arg: options.template,\n        ...options\n      }),\n      headers: options.headers\n    });\n    const {\n      Hash\n    } = await res.json();\n    return CID.parse(Hash);\n  }\n\n  return newObject;\n});","map":{"version":3,"sources":["/home/alex/Documents/gitest/Marketplace/node_modules/ipfs-http-client/esm/src/object/new.js"],"names":["CID","configure","toUrlSearchParams","createNew","api","newObject","options","res","post","signal","searchParams","arg","template","headers","Hash","json","parse"],"mappings":"AAAA,SAASA,GAAT,QAAoB,kBAApB;AACA,SAASC,SAAT,QAA0B,qBAA1B;AACA,SAASC,iBAAT,QAAkC,gCAAlC;AACA,OAAO,MAAMC,SAAS,GAAGF,SAAS,CAACG,GAAG,IAAI;AACxC,iBAAeC,SAAf,GAAuC;AAAA,QAAdC,OAAc,uEAAJ,EAAI;AACrC,UAAMC,GAAG,GAAG,MAAMH,GAAG,CAACI,IAAJ,CAAS,YAAT,EAAuB;AACvCC,MAAAA,MAAM,EAAEH,OAAO,CAACG,MADuB;AAEvCC,MAAAA,YAAY,EAAER,iBAAiB,CAAC;AAC9BS,QAAAA,GAAG,EAAEL,OAAO,CAACM,QADiB;AAE9B,WAAGN;AAF2B,OAAD,CAFQ;AAMvCO,MAAAA,OAAO,EAAEP,OAAO,CAACO;AANsB,KAAvB,CAAlB;AAQA,UAAM;AAACC,MAAAA;AAAD,QAAS,MAAMP,GAAG,CAACQ,IAAJ,EAArB;AACA,WAAOf,GAAG,CAACgB,KAAJ,CAAUF,IAAV,CAAP;AACD;;AACD,SAAOT,SAAP;AACD,CAdiC,CAA3B","sourcesContent":["import { CID } from 'multiformats/cid';\nimport { configure } from '../lib/configure.js';\nimport { toUrlSearchParams } from '../lib/to-url-search-params.js';\nexport const createNew = configure(api => {\n  async function newObject(options = {}) {\n    const res = await api.post('object/new', {\n      signal: options.signal,\n      searchParams: toUrlSearchParams({\n        arg: options.template,\n        ...options\n      }),\n      headers: options.headers\n    });\n    const {Hash} = await res.json();\n    return CID.parse(Hash);\n  }\n  return newObject;\n});"]},"metadata":{},"sourceType":"module"}