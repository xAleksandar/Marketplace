{"ast":null,"code":"import { Multiaddr } from 'multiaddr';\nimport { configure } from '../lib/configure.js';\nimport { toUrlSearchParams } from '../lib/to-url-search-params.js';\nexport const createLocalAddrs = configure(api => {\n  async function localAddrs() {\n    let options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    const res = await api.post('swarm/addrs/local', {\n      signal: options.signal,\n      searchParams: toUrlSearchParams(options),\n      headers: options.headers\n    });\n    const {\n      Strings\n    } = await res.json();\n    return (Strings || []).map(a => new Multiaddr(a));\n  }\n\n  return localAddrs;\n});","map":{"version":3,"sources":["/home/alex/Documents/gitest/Marketplace/node_modules/ipfs-http-client/esm/src/swarm/local-addrs.js"],"names":["Multiaddr","configure","toUrlSearchParams","createLocalAddrs","api","localAddrs","options","res","post","signal","searchParams","headers","Strings","json","map","a"],"mappings":"AAAA,SAASA,SAAT,QAA0B,WAA1B;AACA,SAASC,SAAT,QAA0B,qBAA1B;AACA,SAASC,iBAAT,QAAkC,gCAAlC;AACA,OAAO,MAAMC,gBAAgB,GAAGF,SAAS,CAACG,GAAG,IAAI;AAC/C,iBAAeC,UAAf,GAAwC;AAAA,QAAdC,OAAc,uEAAJ,EAAI;AACtC,UAAMC,GAAG,GAAG,MAAMH,GAAG,CAACI,IAAJ,CAAS,mBAAT,EAA8B;AAC9CC,MAAAA,MAAM,EAAEH,OAAO,CAACG,MAD8B;AAE9CC,MAAAA,YAAY,EAAER,iBAAiB,CAACI,OAAD,CAFe;AAG9CK,MAAAA,OAAO,EAAEL,OAAO,CAACK;AAH6B,KAA9B,CAAlB;AAKA,UAAM;AAACC,MAAAA;AAAD,QAAY,MAAML,GAAG,CAACM,IAAJ,EAAxB;AACA,WAAO,CAACD,OAAO,IAAI,EAAZ,EAAgBE,GAAhB,CAAoBC,CAAC,IAAI,IAAIf,SAAJ,CAAce,CAAd,CAAzB,CAAP;AACD;;AACD,SAAOV,UAAP;AACD,CAXwC,CAAlC","sourcesContent":["import { Multiaddr } from 'multiaddr';\nimport { configure } from '../lib/configure.js';\nimport { toUrlSearchParams } from '../lib/to-url-search-params.js';\nexport const createLocalAddrs = configure(api => {\n  async function localAddrs(options = {}) {\n    const res = await api.post('swarm/addrs/local', {\n      signal: options.signal,\n      searchParams: toUrlSearchParams(options),\n      headers: options.headers\n    });\n    const {Strings} = await res.json();\n    return (Strings || []).map(a => new Multiaddr(a));\n  }\n  return localAddrs;\n});"]},"metadata":{},"sourceType":"module"}