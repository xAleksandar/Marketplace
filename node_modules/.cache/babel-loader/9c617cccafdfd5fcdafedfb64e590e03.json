{"ast":null,"code":"import { configure } from '../lib/configure.js';\nimport { toUrlSearchParams } from '../lib/to-url-search-params.js';\nexport const createBw = configure(api => {\n  async function* bw() {\n    let options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    const res = await api.post('stats/bw', {\n      signal: options.signal,\n      searchParams: toUrlSearchParams(options),\n      headers: options.headers,\n      transform: stats => ({\n        totalIn: BigInt(stats.TotalIn),\n        totalOut: BigInt(stats.TotalOut),\n        rateIn: parseFloat(stats.RateIn),\n        rateOut: parseFloat(stats.RateOut)\n      })\n    });\n    yield* res.ndjson();\n  }\n\n  return bw;\n});","map":{"version":3,"sources":["/home/alex/Documents/gitest/Marketplace/node_modules/ipfs-http-client/esm/src/stats/bw.js"],"names":["configure","toUrlSearchParams","createBw","api","bw","options","res","post","signal","searchParams","headers","transform","stats","totalIn","BigInt","TotalIn","totalOut","TotalOut","rateIn","parseFloat","RateIn","rateOut","RateOut","ndjson"],"mappings":"AAAA,SAASA,SAAT,QAA0B,qBAA1B;AACA,SAASC,iBAAT,QAAkC,gCAAlC;AACA,OAAO,MAAMC,QAAQ,GAAGF,SAAS,CAACG,GAAG,IAAI;AACvC,kBAAgBC,EAAhB,GAAiC;AAAA,QAAdC,OAAc,uEAAJ,EAAI;AAC/B,UAAMC,GAAG,GAAG,MAAMH,GAAG,CAACI,IAAJ,CAAS,UAAT,EAAqB;AACrCC,MAAAA,MAAM,EAAEH,OAAO,CAACG,MADqB;AAErCC,MAAAA,YAAY,EAAER,iBAAiB,CAACI,OAAD,CAFM;AAGrCK,MAAAA,OAAO,EAAEL,OAAO,CAACK,OAHoB;AAIrCC,MAAAA,SAAS,EAAEC,KAAK,KAAK;AACnBC,QAAAA,OAAO,EAAEC,MAAM,CAACF,KAAK,CAACG,OAAP,CADI;AAEnBC,QAAAA,QAAQ,EAAEF,MAAM,CAACF,KAAK,CAACK,QAAP,CAFG;AAGnBC,QAAAA,MAAM,EAAEC,UAAU,CAACP,KAAK,CAACQ,MAAP,CAHC;AAInBC,QAAAA,OAAO,EAAEF,UAAU,CAACP,KAAK,CAACU,OAAP;AAJA,OAAL;AAJqB,KAArB,CAAlB;AAWA,WAAOhB,GAAG,CAACiB,MAAJ,EAAP;AACD;;AACD,SAAOnB,EAAP;AACD,CAhBgC,CAA1B","sourcesContent":["import { configure } from '../lib/configure.js';\nimport { toUrlSearchParams } from '../lib/to-url-search-params.js';\nexport const createBw = configure(api => {\n  async function* bw(options = {}) {\n    const res = await api.post('stats/bw', {\n      signal: options.signal,\n      searchParams: toUrlSearchParams(options),\n      headers: options.headers,\n      transform: stats => ({\n        totalIn: BigInt(stats.TotalIn),\n        totalOut: BigInt(stats.TotalOut),\n        rateIn: parseFloat(stats.RateIn),\n        rateOut: parseFloat(stats.RateOut)\n      })\n    });\n    yield* res.ndjson();\n  }\n  return bw;\n});"]},"metadata":{},"sourceType":"module"}