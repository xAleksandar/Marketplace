{"ast":null,"code":"import { configure } from '../lib/configure.js';\nimport { toUrlSearchParams } from '../lib/to-url-search-params.js';\nexport const createMv = configure(api => {\n  async function mv(sources, destination) {\n    let options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n\n    if (!Array.isArray(sources)) {\n      sources = [sources];\n    }\n\n    const res = await api.post('files/mv', {\n      signal: options.signal,\n      searchParams: toUrlSearchParams({\n        arg: sources.concat(destination),\n        ...options\n      }),\n      headers: options.headers\n    });\n    await res.text();\n  }\n\n  return mv;\n});","map":{"version":3,"sources":["/home/alex/Documents/gitest/Marketplace/node_modules/ipfs-http-client/esm/src/files/mv.js"],"names":["configure","toUrlSearchParams","createMv","api","mv","sources","destination","options","Array","isArray","res","post","signal","searchParams","arg","concat","headers","text"],"mappings":"AAAA,SAASA,SAAT,QAA0B,qBAA1B;AACA,SAASC,iBAAT,QAAkC,gCAAlC;AACA,OAAO,MAAMC,QAAQ,GAAGF,SAAS,CAACG,GAAG,IAAI;AACvC,iBAAeC,EAAf,CAAkBC,OAAlB,EAA2BC,WAA3B,EAAsD;AAAA,QAAdC,OAAc,uEAAJ,EAAI;;AACpD,QAAI,CAACC,KAAK,CAACC,OAAN,CAAcJ,OAAd,CAAL,EAA6B;AAC3BA,MAAAA,OAAO,GAAG,CAACA,OAAD,CAAV;AACD;;AACD,UAAMK,GAAG,GAAG,MAAMP,GAAG,CAACQ,IAAJ,CAAS,UAAT,EAAqB;AACrCC,MAAAA,MAAM,EAAEL,OAAO,CAACK,MADqB;AAErCC,MAAAA,YAAY,EAAEZ,iBAAiB,CAAC;AAC9Ba,QAAAA,GAAG,EAAET,OAAO,CAACU,MAAR,CAAeT,WAAf,CADyB;AAE9B,WAAGC;AAF2B,OAAD,CAFM;AAMrCS,MAAAA,OAAO,EAAET,OAAO,CAACS;AANoB,KAArB,CAAlB;AAQA,UAAMN,GAAG,CAACO,IAAJ,EAAN;AACD;;AACD,SAAOb,EAAP;AACD,CAhBgC,CAA1B","sourcesContent":["import { configure } from '../lib/configure.js';\nimport { toUrlSearchParams } from '../lib/to-url-search-params.js';\nexport const createMv = configure(api => {\n  async function mv(sources, destination, options = {}) {\n    if (!Array.isArray(sources)) {\n      sources = [sources];\n    }\n    const res = await api.post('files/mv', {\n      signal: options.signal,\n      searchParams: toUrlSearchParams({\n        arg: sources.concat(destination),\n        ...options\n      }),\n      headers: options.headers\n    });\n    await res.text();\n  }\n  return mv;\n});"]},"metadata":{},"sourceType":"module"}