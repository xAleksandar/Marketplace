{"ast":null,"code":"import { CID } from 'multiformats/cid';\nimport { configure } from '../lib/configure.js';\nimport { toUrlSearchParams } from '../lib/to-url-search-params.js';\nexport const createLinks = configure(api => {\n  async function links(cid) {\n    let options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    const res = await api.post('object/links', {\n      signal: options.signal,\n      searchParams: toUrlSearchParams({\n        arg: `${cid instanceof Uint8Array ? CID.decode(cid) : cid}`,\n        ...options\n      }),\n      headers: options.headers\n    });\n    const data = await res.json();\n    return (data.Links || []).map(l => ({\n      Name: l.Name,\n      Tsize: l.Size,\n      Hash: CID.parse(l.Hash)\n    }));\n  }\n\n  return links;\n});","map":{"version":3,"sources":["/home/alex/Documents/gitest/Marketplace/node_modules/ipfs-http-client/esm/src/object/links.js"],"names":["CID","configure","toUrlSearchParams","createLinks","api","links","cid","options","res","post","signal","searchParams","arg","Uint8Array","decode","headers","data","json","Links","map","l","Name","Tsize","Size","Hash","parse"],"mappings":"AAAA,SAASA,GAAT,QAAoB,kBAApB;AACA,SAASC,SAAT,QAA0B,qBAA1B;AACA,SAASC,iBAAT,QAAkC,gCAAlC;AACA,OAAO,MAAMC,WAAW,GAAGF,SAAS,CAACG,GAAG,IAAI;AAC1C,iBAAeC,KAAf,CAAqBC,GAArB,EAAwC;AAAA,QAAdC,OAAc,uEAAJ,EAAI;AACtC,UAAMC,GAAG,GAAG,MAAMJ,GAAG,CAACK,IAAJ,CAAS,cAAT,EAAyB;AACzCC,MAAAA,MAAM,EAAEH,OAAO,CAACG,MADyB;AAEzCC,MAAAA,YAAY,EAAET,iBAAiB,CAAC;AAC9BU,QAAAA,GAAG,EAAG,GAAGN,GAAG,YAAYO,UAAf,GAA4Bb,GAAG,CAACc,MAAJ,CAAWR,GAAX,CAA5B,GAA8CA,GAAK,EAD9B;AAE9B,WAAGC;AAF2B,OAAD,CAFU;AAMzCQ,MAAAA,OAAO,EAAER,OAAO,CAACQ;AANwB,KAAzB,CAAlB;AAQA,UAAMC,IAAI,GAAG,MAAMR,GAAG,CAACS,IAAJ,EAAnB;AACA,WAAO,CAACD,IAAI,CAACE,KAAL,IAAc,EAAf,EAAmBC,GAAnB,CAAuBC,CAAC,KAAK;AAClCC,MAAAA,IAAI,EAAED,CAAC,CAACC,IAD0B;AAElCC,MAAAA,KAAK,EAAEF,CAAC,CAACG,IAFyB;AAGlCC,MAAAA,IAAI,EAAExB,GAAG,CAACyB,KAAJ,CAAUL,CAAC,CAACI,IAAZ;AAH4B,KAAL,CAAxB,CAAP;AAKD;;AACD,SAAOnB,KAAP;AACD,CAlBmC,CAA7B","sourcesContent":["import { CID } from 'multiformats/cid';\nimport { configure } from '../lib/configure.js';\nimport { toUrlSearchParams } from '../lib/to-url-search-params.js';\nexport const createLinks = configure(api => {\n  async function links(cid, options = {}) {\n    const res = await api.post('object/links', {\n      signal: options.signal,\n      searchParams: toUrlSearchParams({\n        arg: `${ cid instanceof Uint8Array ? CID.decode(cid) : cid }`,\n        ...options\n      }),\n      headers: options.headers\n    });\n    const data = await res.json();\n    return (data.Links || []).map(l => ({\n      Name: l.Name,\n      Tsize: l.Size,\n      Hash: CID.parse(l.Hash)\n    }));\n  }\n  return links;\n});"]},"metadata":{},"sourceType":"module"}