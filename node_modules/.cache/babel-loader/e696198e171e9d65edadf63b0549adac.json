{"ast":null,"code":"import { configure } from '../lib/configure.js';\nimport { toUrlSearchParams } from '../lib/to-url-search-params.js';\nimport { mapEvent } from './map-event.js';\nexport const createProvide = configure(api => {\n  async function* provide(cids) {\n    let options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {\n      recursive: false\n    };\n    const cidArr = Array.isArray(cids) ? cids : [cids];\n    const res = await api.post('dht/provide', {\n      signal: options.signal,\n      searchParams: toUrlSearchParams({\n        arg: cidArr.map(cid => cid.toString()),\n        ...options\n      }),\n      headers: options.headers\n    });\n\n    for await (const event of res.ndjson()) {\n      yield mapEvent(event);\n    }\n  }\n\n  return provide;\n});","map":{"version":3,"sources":["/home/alex/Documents/gitest/Marketplace/node_modules/ipfs-http-client/esm/src/dht/provide.js"],"names":["configure","toUrlSearchParams","mapEvent","createProvide","api","provide","cids","options","recursive","cidArr","Array","isArray","res","post","signal","searchParams","arg","map","cid","toString","headers","event","ndjson"],"mappings":"AAAA,SAASA,SAAT,QAA0B,qBAA1B;AACA,SAASC,iBAAT,QAAkC,gCAAlC;AACA,SAASC,QAAT,QAAyB,gBAAzB;AACA,OAAO,MAAMC,aAAa,GAAGH,SAAS,CAACI,GAAG,IAAI;AAC5C,kBAAgBC,OAAhB,CAAwBC,IAAxB,EAA8D;AAAA,QAAhCC,OAAgC,uEAAtB;AAAEC,MAAAA,SAAS,EAAE;AAAb,KAAsB;AAC5D,UAAMC,MAAM,GAAGC,KAAK,CAACC,OAAN,CAAcL,IAAd,IAAsBA,IAAtB,GAA6B,CAACA,IAAD,CAA5C;AACA,UAAMM,GAAG,GAAG,MAAMR,GAAG,CAACS,IAAJ,CAAS,aAAT,EAAwB;AACxCC,MAAAA,MAAM,EAAEP,OAAO,CAACO,MADwB;AAExCC,MAAAA,YAAY,EAAEd,iBAAiB,CAAC;AAC9Be,QAAAA,GAAG,EAAEP,MAAM,CAACQ,GAAP,CAAWC,GAAG,IAAIA,GAAG,CAACC,QAAJ,EAAlB,CADyB;AAE9B,WAAGZ;AAF2B,OAAD,CAFS;AAMxCa,MAAAA,OAAO,EAAEb,OAAO,CAACa;AANuB,KAAxB,CAAlB;;AAQA,eAAW,MAAMC,KAAjB,IAA0BT,GAAG,CAACU,MAAJ,EAA1B,EAAwC;AACtC,YAAMpB,QAAQ,CAACmB,KAAD,CAAd;AACD;AACF;;AACD,SAAOhB,OAAP;AACD,CAhBqC,CAA/B","sourcesContent":["import { configure } from '../lib/configure.js';\nimport { toUrlSearchParams } from '../lib/to-url-search-params.js';\nimport { mapEvent } from './map-event.js';\nexport const createProvide = configure(api => {\n  async function* provide(cids, options = { recursive: false }) {\n    const cidArr = Array.isArray(cids) ? cids : [cids];\n    const res = await api.post('dht/provide', {\n      signal: options.signal,\n      searchParams: toUrlSearchParams({\n        arg: cidArr.map(cid => cid.toString()),\n        ...options\n      }),\n      headers: options.headers\n    });\n    for await (const event of res.ndjson()) {\n      yield mapEvent(event);\n    }\n  }\n  return provide;\n});"]},"metadata":{},"sourceType":"module"}