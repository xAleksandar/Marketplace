{"ast":null,"code":"import { configure } from '../lib/configure.js';\nimport { toUrlSearchParams } from '../lib/to-url-search-params.js';\nimport HTTP from 'ipfs-utils/src/http.js';\nexport const createRm = configure(api => {\n  async function rm(path) {\n    let options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    const res = await api.post('files/rm', {\n      signal: options.signal,\n      searchParams: toUrlSearchParams({\n        arg: path,\n        ...options\n      }),\n      headers: options.headers\n    });\n    const body = await res.text();\n\n    if (body !== '') {\n      const error = new HTTP.HTTPError(res);\n      error.message = body;\n      throw error;\n    }\n  }\n\n  return rm;\n});","map":{"version":3,"sources":["/home/alex/Documents/gitest/Marketplace/node_modules/ipfs-http-client/esm/src/files/rm.js"],"names":["configure","toUrlSearchParams","HTTP","createRm","api","rm","path","options","res","post","signal","searchParams","arg","headers","body","text","error","HTTPError","message"],"mappings":"AAAA,SAASA,SAAT,QAA0B,qBAA1B;AACA,SAASC,iBAAT,QAAkC,gCAAlC;AACA,OAAOC,IAAP,MAAiB,wBAAjB;AACA,OAAO,MAAMC,QAAQ,GAAGH,SAAS,CAACI,GAAG,IAAI;AACvC,iBAAeC,EAAf,CAAkBC,IAAlB,EAAsC;AAAA,QAAdC,OAAc,uEAAJ,EAAI;AACpC,UAAMC,GAAG,GAAG,MAAMJ,GAAG,CAACK,IAAJ,CAAS,UAAT,EAAqB;AACrCC,MAAAA,MAAM,EAAEH,OAAO,CAACG,MADqB;AAErCC,MAAAA,YAAY,EAAEV,iBAAiB,CAAC;AAC9BW,QAAAA,GAAG,EAAEN,IADyB;AAE9B,WAAGC;AAF2B,OAAD,CAFM;AAMrCM,MAAAA,OAAO,EAAEN,OAAO,CAACM;AANoB,KAArB,CAAlB;AAQA,UAAMC,IAAI,GAAG,MAAMN,GAAG,CAACO,IAAJ,EAAnB;;AACA,QAAID,IAAI,KAAK,EAAb,EAAiB;AACf,YAAME,KAAK,GAAG,IAAId,IAAI,CAACe,SAAT,CAAmBT,GAAnB,CAAd;AACAQ,MAAAA,KAAK,CAACE,OAAN,GAAgBJ,IAAhB;AACA,YAAME,KAAN;AACD;AACF;;AACD,SAAOX,EAAP;AACD,CAlBgC,CAA1B","sourcesContent":["import { configure } from '../lib/configure.js';\nimport { toUrlSearchParams } from '../lib/to-url-search-params.js';\nimport HTTP from 'ipfs-utils/src/http.js';\nexport const createRm = configure(api => {\n  async function rm(path, options = {}) {\n    const res = await api.post('files/rm', {\n      signal: options.signal,\n      searchParams: toUrlSearchParams({\n        arg: path,\n        ...options\n      }),\n      headers: options.headers\n    });\n    const body = await res.text();\n    if (body !== '') {\n      const error = new HTTP.HTTPError(res);\n      error.message = body;\n      throw error;\n    }\n  }\n  return rm;\n});"]},"metadata":{},"sourceType":"module"}