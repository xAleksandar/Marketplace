{"ast":null,"code":"import { configure } from '../lib/configure.js';\nimport { toUrlSearchParams } from '../lib/to-url-search-params.js';\nexport const createStat = configure(api => {\n  async function stat() {\n    let options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    const res = await api.post('repo/stat', {\n      signal: options.signal,\n      searchParams: toUrlSearchParams(options),\n      headers: options.headers\n    });\n    const data = await res.json();\n    return {\n      numObjects: BigInt(data.NumObjects),\n      repoSize: BigInt(data.RepoSize),\n      repoPath: data.RepoPath,\n      version: data.Version,\n      storageMax: BigInt(data.StorageMax)\n    };\n  }\n\n  return stat;\n});","map":{"version":3,"sources":["/home/alex/Documents/gitest/Marketplace/node_modules/ipfs-http-client/esm/src/repo/stat.js"],"names":["configure","toUrlSearchParams","createStat","api","stat","options","res","post","signal","searchParams","headers","data","json","numObjects","BigInt","NumObjects","repoSize","RepoSize","repoPath","RepoPath","version","Version","storageMax","StorageMax"],"mappings":"AAAA,SAASA,SAAT,QAA0B,qBAA1B;AACA,SAASC,iBAAT,QAAkC,gCAAlC;AACA,OAAO,MAAMC,UAAU,GAAGF,SAAS,CAACG,GAAG,IAAI;AACzC,iBAAeC,IAAf,GAAkC;AAAA,QAAdC,OAAc,uEAAJ,EAAI;AAChC,UAAMC,GAAG,GAAG,MAAMH,GAAG,CAACI,IAAJ,CAAS,WAAT,EAAsB;AACtCC,MAAAA,MAAM,EAAEH,OAAO,CAACG,MADsB;AAEtCC,MAAAA,YAAY,EAAER,iBAAiB,CAACI,OAAD,CAFO;AAGtCK,MAAAA,OAAO,EAAEL,OAAO,CAACK;AAHqB,KAAtB,CAAlB;AAKA,UAAMC,IAAI,GAAG,MAAML,GAAG,CAACM,IAAJ,EAAnB;AACA,WAAO;AACLC,MAAAA,UAAU,EAAEC,MAAM,CAACH,IAAI,CAACI,UAAN,CADb;AAELC,MAAAA,QAAQ,EAAEF,MAAM,CAACH,IAAI,CAACM,QAAN,CAFX;AAGLC,MAAAA,QAAQ,EAAEP,IAAI,CAACQ,QAHV;AAILC,MAAAA,OAAO,EAAET,IAAI,CAACU,OAJT;AAKLC,MAAAA,UAAU,EAAER,MAAM,CAACH,IAAI,CAACY,UAAN;AALb,KAAP;AAOD;;AACD,SAAOnB,IAAP;AACD,CAjBkC,CAA5B","sourcesContent":["import { configure } from '../lib/configure.js';\nimport { toUrlSearchParams } from '../lib/to-url-search-params.js';\nexport const createStat = configure(api => {\n  async function stat(options = {}) {\n    const res = await api.post('repo/stat', {\n      signal: options.signal,\n      searchParams: toUrlSearchParams(options),\n      headers: options.headers\n    });\n    const data = await res.json();\n    return {\n      numObjects: BigInt(data.NumObjects),\n      repoSize: BigInt(data.RepoSize),\n      repoPath: data.RepoPath,\n      version: data.Version,\n      storageMax: BigInt(data.StorageMax)\n    };\n  }\n  return stat;\n});"]},"metadata":{},"sourceType":"module"}