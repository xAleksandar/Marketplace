{"ast":null,"code":"import { Multiaddr } from 'multiaddr';\nimport { configure } from '../lib/configure.js';\nimport { toUrlSearchParams } from '../lib/to-url-search-params.js';\nexport const createPeers = configure(api => {\n  async function peers() {\n    let options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    const res = await api.post('swarm/peers', {\n      signal: options.signal,\n      searchParams: toUrlSearchParams(options),\n      headers: options.headers\n    });\n    const {\n      Peers\n    } = await res.json();\n    return (Peers || []).map(peer => {\n      return {\n        addr: new Multiaddr(peer.Addr),\n        peer: peer.Peer,\n        muxer: peer.Muxer,\n        latency: peer.Latency,\n        streams: peer.Streams,\n        direction: peer.Direction == null ? undefined : peer.Direction === 0 ? 'inbound' : 'outbound'\n      };\n    });\n  }\n\n  return peers;\n});","map":{"version":3,"sources":["/home/alex/Documents/gitest/Marketplace/node_modules/ipfs-http-client/esm/src/swarm/peers.js"],"names":["Multiaddr","configure","toUrlSearchParams","createPeers","api","peers","options","res","post","signal","searchParams","headers","Peers","json","map","peer","addr","Addr","Peer","muxer","Muxer","latency","Latency","streams","Streams","direction","Direction","undefined"],"mappings":"AAAA,SAASA,SAAT,QAA0B,WAA1B;AACA,SAASC,SAAT,QAA0B,qBAA1B;AACA,SAASC,iBAAT,QAAkC,gCAAlC;AACA,OAAO,MAAMC,WAAW,GAAGF,SAAS,CAACG,GAAG,IAAI;AAC1C,iBAAeC,KAAf,GAAmC;AAAA,QAAdC,OAAc,uEAAJ,EAAI;AACjC,UAAMC,GAAG,GAAG,MAAMH,GAAG,CAACI,IAAJ,CAAS,aAAT,EAAwB;AACxCC,MAAAA,MAAM,EAAEH,OAAO,CAACG,MADwB;AAExCC,MAAAA,YAAY,EAAER,iBAAiB,CAACI,OAAD,CAFS;AAGxCK,MAAAA,OAAO,EAAEL,OAAO,CAACK;AAHuB,KAAxB,CAAlB;AAKA,UAAM;AAACC,MAAAA;AAAD,QAAU,MAAML,GAAG,CAACM,IAAJ,EAAtB;AACA,WAAO,CAACD,KAAK,IAAI,EAAV,EAAcE,GAAd,CAAkBC,IAAI,IAAI;AAC/B,aAAO;AACLC,QAAAA,IAAI,EAAE,IAAIhB,SAAJ,CAAce,IAAI,CAACE,IAAnB,CADD;AAELF,QAAAA,IAAI,EAAEA,IAAI,CAACG,IAFN;AAGLC,QAAAA,KAAK,EAAEJ,IAAI,CAACK,KAHP;AAILC,QAAAA,OAAO,EAAEN,IAAI,CAACO,OAJT;AAKLC,QAAAA,OAAO,EAAER,IAAI,CAACS,OALT;AAMLC,QAAAA,SAAS,EAAEV,IAAI,CAACW,SAAL,IAAkB,IAAlB,GAAyBC,SAAzB,GAAqCZ,IAAI,CAACW,SAAL,KAAmB,CAAnB,GAAuB,SAAvB,GAAmC;AAN9E,OAAP;AAQD,KATM,CAAP;AAUD;;AACD,SAAOrB,KAAP;AACD,CApBmC,CAA7B","sourcesContent":["import { Multiaddr } from 'multiaddr';\nimport { configure } from '../lib/configure.js';\nimport { toUrlSearchParams } from '../lib/to-url-search-params.js';\nexport const createPeers = configure(api => {\n  async function peers(options = {}) {\n    const res = await api.post('swarm/peers', {\n      signal: options.signal,\n      searchParams: toUrlSearchParams(options),\n      headers: options.headers\n    });\n    const {Peers} = await res.json();\n    return (Peers || []).map(peer => {\n      return {\n        addr: new Multiaddr(peer.Addr),\n        peer: peer.Peer,\n        muxer: peer.Muxer,\n        latency: peer.Latency,\n        streams: peer.Streams,\n        direction: peer.Direction == null ? undefined : peer.Direction === 0 ? 'inbound' : 'outbound'\n      };\n    });\n  }\n  return peers;\n});"]},"metadata":{},"sourceType":"module"}