{"ast":null,"code":"import { CID } from 'multiformats/cid';\nimport { configure } from '../lib/configure.js';\nimport { toUrlSearchParams } from '../lib/to-url-search-params.js';\nexport const createStat = configure(api => {\n  async function stat(cid) {\n    let options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    const res = await api.post('block/stat', {\n      signal: options.signal,\n      searchParams: toUrlSearchParams({\n        arg: cid.toString(),\n        ...options\n      }),\n      headers: options.headers\n    });\n    const data = await res.json();\n    return {\n      cid: CID.parse(data.Key),\n      size: data.Size\n    };\n  }\n\n  return stat;\n});","map":{"version":3,"sources":["/home/alex/Documents/gitest/Marketplace/node_modules/ipfs-http-client/esm/src/block/stat.js"],"names":["CID","configure","toUrlSearchParams","createStat","api","stat","cid","options","res","post","signal","searchParams","arg","toString","headers","data","json","parse","Key","size","Size"],"mappings":"AAAA,SAASA,GAAT,QAAoB,kBAApB;AACA,SAASC,SAAT,QAA0B,qBAA1B;AACA,SAASC,iBAAT,QAAkC,gCAAlC;AACA,OAAO,MAAMC,UAAU,GAAGF,SAAS,CAACG,GAAG,IAAI;AACzC,iBAAeC,IAAf,CAAoBC,GAApB,EAAuC;AAAA,QAAdC,OAAc,uEAAJ,EAAI;AACrC,UAAMC,GAAG,GAAG,MAAMJ,GAAG,CAACK,IAAJ,CAAS,YAAT,EAAuB;AACvCC,MAAAA,MAAM,EAAEH,OAAO,CAACG,MADuB;AAEvCC,MAAAA,YAAY,EAAET,iBAAiB,CAAC;AAC9BU,QAAAA,GAAG,EAAEN,GAAG,CAACO,QAAJ,EADyB;AAE9B,WAAGN;AAF2B,OAAD,CAFQ;AAMvCO,MAAAA,OAAO,EAAEP,OAAO,CAACO;AANsB,KAAvB,CAAlB;AAQA,UAAMC,IAAI,GAAG,MAAMP,GAAG,CAACQ,IAAJ,EAAnB;AACA,WAAO;AACLV,MAAAA,GAAG,EAAEN,GAAG,CAACiB,KAAJ,CAAUF,IAAI,CAACG,GAAf,CADA;AAELC,MAAAA,IAAI,EAAEJ,IAAI,CAACK;AAFN,KAAP;AAID;;AACD,SAAOf,IAAP;AACD,CAjBkC,CAA5B","sourcesContent":["import { CID } from 'multiformats/cid';\nimport { configure } from '../lib/configure.js';\nimport { toUrlSearchParams } from '../lib/to-url-search-params.js';\nexport const createStat = configure(api => {\n  async function stat(cid, options = {}) {\n    const res = await api.post('block/stat', {\n      signal: options.signal,\n      searchParams: toUrlSearchParams({\n        arg: cid.toString(),\n        ...options\n      }),\n      headers: options.headers\n    });\n    const data = await res.json();\n    return {\n      cid: CID.parse(data.Key),\n      size: data.Size\n    };\n  }\n  return stat;\n});"]},"metadata":{},"sourceType":"module"}