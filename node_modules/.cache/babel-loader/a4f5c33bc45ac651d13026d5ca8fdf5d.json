{"ast":null,"code":"import { configure } from '../lib/configure.js';\nimport { toUrlSearchParams } from '../lib/to-url-search-params.js';\nimport { textToUrlSafeRpc } from '../lib/http-rpc-wire-format.js';\nexport const createPeers = configure(api => {\n  async function peers(topic) {\n    let options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    const res = await api.post('pubsub/peers', {\n      signal: options.signal,\n      searchParams: toUrlSearchParams({\n        arg: textToUrlSafeRpc(topic),\n        ...options\n      }),\n      headers: options.headers\n    });\n    const {\n      Strings\n    } = await res.json();\n    return Strings || [];\n  }\n\n  return peers;\n});","map":{"version":3,"sources":["/home/alex/Documents/gitest/Marketplace/node_modules/ipfs-http-client/esm/src/pubsub/peers.js"],"names":["configure","toUrlSearchParams","textToUrlSafeRpc","createPeers","api","peers","topic","options","res","post","signal","searchParams","arg","headers","Strings","json"],"mappings":"AAAA,SAASA,SAAT,QAA0B,qBAA1B;AACA,SAASC,iBAAT,QAAkC,gCAAlC;AACA,SAASC,gBAAT,QAAiC,gCAAjC;AACA,OAAO,MAAMC,WAAW,GAAGH,SAAS,CAACI,GAAG,IAAI;AAC1C,iBAAeC,KAAf,CAAqBC,KAArB,EAA0C;AAAA,QAAdC,OAAc,uEAAJ,EAAI;AACxC,UAAMC,GAAG,GAAG,MAAMJ,GAAG,CAACK,IAAJ,CAAS,cAAT,EAAyB;AACzCC,MAAAA,MAAM,EAAEH,OAAO,CAACG,MADyB;AAEzCC,MAAAA,YAAY,EAAEV,iBAAiB,CAAC;AAC9BW,QAAAA,GAAG,EAAEV,gBAAgB,CAACI,KAAD,CADS;AAE9B,WAAGC;AAF2B,OAAD,CAFU;AAMzCM,MAAAA,OAAO,EAAEN,OAAO,CAACM;AANwB,KAAzB,CAAlB;AAQA,UAAM;AAACC,MAAAA;AAAD,QAAY,MAAMN,GAAG,CAACO,IAAJ,EAAxB;AACA,WAAOD,OAAO,IAAI,EAAlB;AACD;;AACD,SAAOT,KAAP;AACD,CAdmC,CAA7B","sourcesContent":["import { configure } from '../lib/configure.js';\nimport { toUrlSearchParams } from '../lib/to-url-search-params.js';\nimport { textToUrlSafeRpc } from '../lib/http-rpc-wire-format.js';\nexport const createPeers = configure(api => {\n  async function peers(topic, options = {}) {\n    const res = await api.post('pubsub/peers', {\n      signal: options.signal,\n      searchParams: toUrlSearchParams({\n        arg: textToUrlSafeRpc(topic),\n        ...options\n      }),\n      headers: options.headers\n    });\n    const {Strings} = await res.json();\n    return Strings || [];\n  }\n  return peers;\n});"]},"metadata":{},"sourceType":"module"}