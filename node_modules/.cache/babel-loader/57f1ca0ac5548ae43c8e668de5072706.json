{"ast":null,"code":"import { configure } from '../lib/configure.js';\nimport { toUrlSearchParams } from '../lib/to-url-search-params.js';\nimport { mapEvent } from './map-event.js';\nexport const createQuery = configure(api => {\n  async function* query(peerId) {\n    let options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    const res = await api.post('dht/query', {\n      signal: options.signal,\n      searchParams: toUrlSearchParams({\n        arg: peerId.toString(),\n        ...options\n      }),\n      headers: options.headers\n    });\n\n    for await (const event of res.ndjson()) {\n      yield mapEvent(event);\n    }\n  }\n\n  return query;\n});","map":{"version":3,"sources":["/home/alex/Documents/gitest/Marketplace/node_modules/ipfs-http-client/esm/src/dht/query.js"],"names":["configure","toUrlSearchParams","mapEvent","createQuery","api","query","peerId","options","res","post","signal","searchParams","arg","toString","headers","event","ndjson"],"mappings":"AAAA,SAASA,SAAT,QAA0B,qBAA1B;AACA,SAASC,iBAAT,QAAkC,gCAAlC;AACA,SAASC,QAAT,QAAyB,gBAAzB;AACA,OAAO,MAAMC,WAAW,GAAGH,SAAS,CAACI,GAAG,IAAI;AAC1C,kBAAgBC,KAAhB,CAAsBC,MAAtB,EAA4C;AAAA,QAAdC,OAAc,uEAAJ,EAAI;AAC1C,UAAMC,GAAG,GAAG,MAAMJ,GAAG,CAACK,IAAJ,CAAS,WAAT,EAAsB;AACtCC,MAAAA,MAAM,EAAEH,OAAO,CAACG,MADsB;AAEtCC,MAAAA,YAAY,EAAEV,iBAAiB,CAAC;AAC9BW,QAAAA,GAAG,EAAEN,MAAM,CAACO,QAAP,EADyB;AAE9B,WAAGN;AAF2B,OAAD,CAFO;AAMtCO,MAAAA,OAAO,EAAEP,OAAO,CAACO;AANqB,KAAtB,CAAlB;;AAQA,eAAW,MAAMC,KAAjB,IAA0BP,GAAG,CAACQ,MAAJ,EAA1B,EAAwC;AACtC,YAAMd,QAAQ,CAACa,KAAD,CAAd;AACD;AACF;;AACD,SAAOV,KAAP;AACD,CAfmC,CAA7B","sourcesContent":["import { configure } from '../lib/configure.js';\nimport { toUrlSearchParams } from '../lib/to-url-search-params.js';\nimport { mapEvent } from './map-event.js';\nexport const createQuery = configure(api => {\n  async function* query(peerId, options = {}) {\n    const res = await api.post('dht/query', {\n      signal: options.signal,\n      searchParams: toUrlSearchParams({\n        arg: peerId.toString(),\n        ...options\n      }),\n      headers: options.headers\n    });\n    for await (const event of res.ndjson()) {\n      yield mapEvent(event);\n    }\n  }\n  return query;\n});"]},"metadata":{},"sourceType":"module"}