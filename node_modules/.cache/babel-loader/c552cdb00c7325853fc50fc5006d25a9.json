{"ast":null,"code":"var _jsxFileName = \"/home/alex/Documents/gitest/Marketplace/src/components/MarketItem.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { Row, Form, Button } from 'react-bootstrap';\nimport './Item.css';\nimport { ethers } from \"ethers\";\nimport MarketplaceAbi from './../contractsData/Marketplace.json';\nimport MarketplaceAddress from './../contractsData/Marketplace-address.json';\nimport NFTAbi from './../contractsData/NFT.json';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst MarketItem = props => {\n  _s();\n\n  const [price, setPrice] = useState(null);\n\n  async function debugg() {\n    const marketplace = new ethers.Contract(MarketplaceAddress.address, MarketplaceAbi.abi, props.signer);\n    console.log(await marketplace.items(7));\n    console.log(await marketplace.items(8));\n    console.log(await marketplace.items(9));\n    console.log(await marketplace.items(10));\n    console.log(await marketplace.items(11));\n  }\n\n  async function unlistItem() {\n    const NFTcontract = new ethers.Contract(props.collection, NFTAbi.abi, props.signer);\n    const approved = await NFTcontract.approve(props.collection, props.tokenid);\n    const marketplace = new ethers.Contract(MarketplaceAddress.address, MarketplaceAbi.abi, props.signer);\n    const totalitems = (await marketplace.lengthItems()).toString();\n\n    for (let i = 0; i <= totalitems; i++) {\n      let nft = await marketplace.items(i);\n      let nftid = nft.tokenId.toString();\n      let nftaddress = nft.nft;\n\n      if (nftid == props.tokenid && nftaddress == props.collection) {\n        await marketplace.cancelSell(i);\n      }\n    }\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"card\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"card__body\",\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        src: props.image,\n        className: \"card__image\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"card__title\",\n        children: props.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => unlistItem(),\n      className: \"card__btn\",\n      children: \"Unlist\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 9\n  }, this);\n};\n\n_s(MarketItem, \"vbDBwyZPOT6S9w40r+PMwg6I/XQ=\");\n\n_c = MarketItem;\nexport default MarketItem;\n\nvar _c;\n\n$RefreshReg$(_c, \"MarketItem\");","map":{"version":3,"sources":["/home/alex/Documents/gitest/Marketplace/src/components/MarketItem.js"],"names":["React","useState","Row","Form","Button","ethers","MarketplaceAbi","MarketplaceAddress","NFTAbi","MarketItem","props","price","setPrice","debugg","marketplace","Contract","address","abi","signer","console","log","items","unlistItem","NFTcontract","collection","approved","approve","tokenid","totalitems","lengthItems","toString","i","nft","nftid","tokenId","nftaddress","cancelSell","image","name"],"mappings":"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","sourcesContent":["import React, {useState} from 'react'\nimport { Row, Form, Button } from 'react-bootstrap'\nimport './Item.css'\nimport { ethers } from \"ethers\"\nimport MarketplaceAbi from  './../contractsData/Marketplace.json'\nimport MarketplaceAddress from './../contractsData/Marketplace-address.json'\nimport NFTAbi from './../contractsData/NFT.json'\n\nconst MarketItem = (props) => {\n\n    const [price, setPrice] = useState(null)\n\n    async function debugg() {\n        const marketplace = new ethers.Contract(MarketplaceAddress.address, MarketplaceAbi.abi, props.signer)\n        \n        console.log(await marketplace.items(7))\n        console.log(await marketplace.items(8))\n        console.log(await marketplace.items(9))\n        console.log(await marketplace.items(10))\n        console.log(await marketplace.items(11))\n    }\n\n    async function unlistItem() {\n        const NFTcontract = new ethers.Contract(props.collection, NFTAbi.abi, props.signer)\n        const approved = await NFTcontract.approve(props.collection, props.tokenid)\n        \n        const marketplace = new ethers.Contract(MarketplaceAddress.address, MarketplaceAbi.abi, props.signer)\n        const totalitems = (await marketplace.lengthItems()).toString()\n        \n        for (let i = 0; i <=totalitems; i++) {\n            let nft = await marketplace.items(i)\n            let nftid = nft.tokenId.toString()\n            let nftaddress = nft.nft\n            \n            if (nftid == props.tokenid && nftaddress == props.collection) {\n                await marketplace.cancelSell(i)\n            }\n        }\n\n        \n    }\n\n    return (\n        <div className=\"card\">\n            <div className=\"card__body\">\n                <img src={props.image} className=\"card__image\" />\n                <h2 className=\"card__title\">{props.name}</h2>\n            </div>\n            \n            <button onClick={() => unlistItem()} className=\"card__btn\">Unlist</button>\n        </div>\n    )\n}\n\nexport default MarketItem;"]},"metadata":{},"sourceType":"module"}