{"ast":null,"code":"export class SubscriptionTracker {\n  constructor() {\n    this._subs = new Map();\n  }\n\n  subscribe(topic, handler, signal) {\n    const topicSubs = this._subs.get(topic) || [];\n\n    if (topicSubs.find(s => s.handler === handler)) {\n      throw new Error(`Already subscribed to ${topic} with this handler`);\n    }\n\n    const controller = new AbortController();\n\n    this._subs.set(topic, [{\n      handler,\n      controller\n    }].concat(topicSubs));\n\n    if (signal) {\n      signal.addEventListener('abort', () => this.unsubscribe(topic, handler));\n    }\n\n    return controller.signal;\n  }\n\n  unsubscribe(topic, handler) {\n    const subs = this._subs.get(topic) || [];\n    let unsubs;\n\n    if (handler) {\n      this._subs.set(topic, subs.filter(s => s.handler !== handler));\n\n      unsubs = subs.filter(s => s.handler === handler);\n    } else {\n      this._subs.set(topic, []);\n\n      unsubs = subs;\n    }\n\n    if (!(this._subs.get(topic) || []).length) {\n      this._subs.delete(topic);\n    }\n\n    unsubs.forEach(s => s.controller.abort());\n  }\n\n}","map":{"version":3,"sources":["/home/alex/Documents/gitest/Marketplace/node_modules/ipfs-http-client/esm/src/pubsub/subscription-tracker.js"],"names":["SubscriptionTracker","constructor","_subs","Map","subscribe","topic","handler","signal","topicSubs","get","find","s","Error","controller","AbortController","set","concat","addEventListener","unsubscribe","subs","unsubs","filter","length","delete","forEach","abort"],"mappings":"AAAA,OAAO,MAAMA,mBAAN,CAA0B;AAC/BC,EAAAA,WAAW,GAAG;AACZ,SAAKC,KAAL,GAAa,IAAIC,GAAJ,EAAb;AACD;;AACDC,EAAAA,SAAS,CAACC,KAAD,EAAQC,OAAR,EAAiBC,MAAjB,EAAyB;AAChC,UAAMC,SAAS,GAAG,KAAKN,KAAL,CAAWO,GAAX,CAAeJ,KAAf,KAAyB,EAA3C;;AACA,QAAIG,SAAS,CAACE,IAAV,CAAeC,CAAC,IAAIA,CAAC,CAACL,OAAF,KAAcA,OAAlC,CAAJ,EAAgD;AAC9C,YAAM,IAAIM,KAAJ,CAAW,yBAAyBP,KAAO,oBAA3C,CAAN;AACD;;AACD,UAAMQ,UAAU,GAAG,IAAIC,eAAJ,EAAnB;;AACA,SAAKZ,KAAL,CAAWa,GAAX,CAAeV,KAAf,EAAsB,CAAC;AACnBC,MAAAA,OADmB;AAEnBO,MAAAA;AAFmB,KAAD,EAGjBG,MAHiB,CAGVR,SAHU,CAAtB;;AAIA,QAAID,MAAJ,EAAY;AACVA,MAAAA,MAAM,CAACU,gBAAP,CAAwB,OAAxB,EAAiC,MAAM,KAAKC,WAAL,CAAiBb,KAAjB,EAAwBC,OAAxB,CAAvC;AACD;;AACD,WAAOO,UAAU,CAACN,MAAlB;AACD;;AACDW,EAAAA,WAAW,CAACb,KAAD,EAAQC,OAAR,EAAiB;AAC1B,UAAMa,IAAI,GAAG,KAAKjB,KAAL,CAAWO,GAAX,CAAeJ,KAAf,KAAyB,EAAtC;AACA,QAAIe,MAAJ;;AACA,QAAId,OAAJ,EAAa;AACX,WAAKJ,KAAL,CAAWa,GAAX,CAAeV,KAAf,EAAsBc,IAAI,CAACE,MAAL,CAAYV,CAAC,IAAIA,CAAC,CAACL,OAAF,KAAcA,OAA/B,CAAtB;;AACAc,MAAAA,MAAM,GAAGD,IAAI,CAACE,MAAL,CAAYV,CAAC,IAAIA,CAAC,CAACL,OAAF,KAAcA,OAA/B,CAAT;AACD,KAHD,MAGO;AACL,WAAKJ,KAAL,CAAWa,GAAX,CAAeV,KAAf,EAAsB,EAAtB;;AACAe,MAAAA,MAAM,GAAGD,IAAT;AACD;;AACD,QAAI,CAAC,CAAC,KAAKjB,KAAL,CAAWO,GAAX,CAAeJ,KAAf,KAAyB,EAA1B,EAA8BiB,MAAnC,EAA2C;AACzC,WAAKpB,KAAL,CAAWqB,MAAX,CAAkBlB,KAAlB;AACD;;AACDe,IAAAA,MAAM,CAACI,OAAP,CAAeb,CAAC,IAAIA,CAAC,CAACE,UAAF,CAAaY,KAAb,EAApB;AACD;;AAjC8B","sourcesContent":["export class SubscriptionTracker {\n  constructor() {\n    this._subs = new Map();\n  }\n  subscribe(topic, handler, signal) {\n    const topicSubs = this._subs.get(topic) || [];\n    if (topicSubs.find(s => s.handler === handler)) {\n      throw new Error(`Already subscribed to ${ topic } with this handler`);\n    }\n    const controller = new AbortController();\n    this._subs.set(topic, [{\n        handler,\n        controller\n      }].concat(topicSubs));\n    if (signal) {\n      signal.addEventListener('abort', () => this.unsubscribe(topic, handler));\n    }\n    return controller.signal;\n  }\n  unsubscribe(topic, handler) {\n    const subs = this._subs.get(topic) || [];\n    let unsubs;\n    if (handler) {\n      this._subs.set(topic, subs.filter(s => s.handler !== handler));\n      unsubs = subs.filter(s => s.handler === handler);\n    } else {\n      this._subs.set(topic, []);\n      unsubs = subs;\n    }\n    if (!(this._subs.get(topic) || []).length) {\n      this._subs.delete(topic);\n    }\n    unsubs.forEach(s => s.controller.abort());\n  }\n}"]},"metadata":{},"sourceType":"module"}