{"ast":null,"code":"import { CID } from 'multiformats/cid';\nimport { configure } from '../lib/configure.js';\nimport { toUrlSearchParams } from '../lib/to-url-search-params.js';\nexport const createStat = configure(api => {\n  async function stat(cid) {\n    let options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    const res = await api.post('object/stat', {\n      signal: options.signal,\n      searchParams: toUrlSearchParams({\n        arg: `${cid}`,\n        ...options\n      }),\n      headers: options.headers\n    });\n    const output = await res.json();\n    return { ...output,\n      Hash: CID.parse(output.Hash)\n    };\n  }\n\n  return stat;\n});","map":{"version":3,"sources":["/home/alex/Documents/gitest/Marketplace/node_modules/ipfs-http-client/esm/src/object/stat.js"],"names":["CID","configure","toUrlSearchParams","createStat","api","stat","cid","options","res","post","signal","searchParams","arg","headers","output","json","Hash","parse"],"mappings":"AAAA,SAASA,GAAT,QAAoB,kBAApB;AACA,SAASC,SAAT,QAA0B,qBAA1B;AACA,SAASC,iBAAT,QAAkC,gCAAlC;AACA,OAAO,MAAMC,UAAU,GAAGF,SAAS,CAACG,GAAG,IAAI;AACzC,iBAAeC,IAAf,CAAoBC,GAApB,EAAuC;AAAA,QAAdC,OAAc,uEAAJ,EAAI;AACrC,UAAMC,GAAG,GAAG,MAAMJ,GAAG,CAACK,IAAJ,CAAS,aAAT,EAAwB;AACxCC,MAAAA,MAAM,EAAEH,OAAO,CAACG,MADwB;AAExCC,MAAAA,YAAY,EAAET,iBAAiB,CAAC;AAC9BU,QAAAA,GAAG,EAAG,GAAGN,GAAK,EADgB;AAE9B,WAAGC;AAF2B,OAAD,CAFS;AAMxCM,MAAAA,OAAO,EAAEN,OAAO,CAACM;AANuB,KAAxB,CAAlB;AAQA,UAAMC,MAAM,GAAG,MAAMN,GAAG,CAACO,IAAJ,EAArB;AACA,WAAO,EACL,GAAGD,MADE;AAELE,MAAAA,IAAI,EAAEhB,GAAG,CAACiB,KAAJ,CAAUH,MAAM,CAACE,IAAjB;AAFD,KAAP;AAID;;AACD,SAAOX,IAAP;AACD,CAjBkC,CAA5B","sourcesContent":["import { CID } from 'multiformats/cid';\nimport { configure } from '../lib/configure.js';\nimport { toUrlSearchParams } from '../lib/to-url-search-params.js';\nexport const createStat = configure(api => {\n  async function stat(cid, options = {}) {\n    const res = await api.post('object/stat', {\n      signal: options.signal,\n      searchParams: toUrlSearchParams({\n        arg: `${ cid }`,\n        ...options\n      }),\n      headers: options.headers\n    });\n    const output = await res.json();\n    return {\n      ...output,\n      Hash: CID.parse(output.Hash)\n    };\n  }\n  return stat;\n});"]},"metadata":{},"sourceType":"module"}