{"ast":null,"code":"import { configure } from '../lib/configure.js';\nimport { toUrlSearchParams } from '../lib/to-url-search-params.js';\nexport const createResolve = configure(api => {\n  async function* resolve(path) {\n    let options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    const res = await api.post('name/resolve', {\n      signal: options.signal,\n      searchParams: toUrlSearchParams({\n        arg: path,\n        stream: true,\n        ...options\n      }),\n      headers: options.headers\n    });\n\n    for await (const result of res.ndjson()) {\n      yield result.Path;\n    }\n  }\n\n  return resolve;\n});","map":{"version":3,"sources":["/home/alex/Documents/gitest/Marketplace/node_modules/ipfs-http-client/esm/src/name/resolve.js"],"names":["configure","toUrlSearchParams","createResolve","api","resolve","path","options","res","post","signal","searchParams","arg","stream","headers","result","ndjson","Path"],"mappings":"AAAA,SAASA,SAAT,QAA0B,qBAA1B;AACA,SAASC,iBAAT,QAAkC,gCAAlC;AACA,OAAO,MAAMC,aAAa,GAAGF,SAAS,CAACG,GAAG,IAAI;AAC5C,kBAAgBC,OAAhB,CAAwBC,IAAxB,EAA4C;AAAA,QAAdC,OAAc,uEAAJ,EAAI;AAC1C,UAAMC,GAAG,GAAG,MAAMJ,GAAG,CAACK,IAAJ,CAAS,cAAT,EAAyB;AACzCC,MAAAA,MAAM,EAAEH,OAAO,CAACG,MADyB;AAEzCC,MAAAA,YAAY,EAAET,iBAAiB,CAAC;AAC9BU,QAAAA,GAAG,EAAEN,IADyB;AAE9BO,QAAAA,MAAM,EAAE,IAFsB;AAG9B,WAAGN;AAH2B,OAAD,CAFU;AAOzCO,MAAAA,OAAO,EAAEP,OAAO,CAACO;AAPwB,KAAzB,CAAlB;;AASA,eAAW,MAAMC,MAAjB,IAA2BP,GAAG,CAACQ,MAAJ,EAA3B,EAAyC;AACvC,YAAMD,MAAM,CAACE,IAAb;AACD;AACF;;AACD,SAAOZ,OAAP;AACD,CAhBqC,CAA/B","sourcesContent":["import { configure } from '../lib/configure.js';\nimport { toUrlSearchParams } from '../lib/to-url-search-params.js';\nexport const createResolve = configure(api => {\n  async function* resolve(path, options = {}) {\n    const res = await api.post('name/resolve', {\n      signal: options.signal,\n      searchParams: toUrlSearchParams({\n        arg: path,\n        stream: true,\n        ...options\n      }),\n      headers: options.headers\n    });\n    for await (const result of res.ndjson()) {\n      yield result.Path;\n    }\n  }\n  return resolve;\n});"]},"metadata":{},"sourceType":"module"}