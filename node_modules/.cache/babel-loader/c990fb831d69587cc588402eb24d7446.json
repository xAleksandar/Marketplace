{"ast":null,"code":"import { CID } from 'multiformats/cid';\nimport { multipartRequest } from 'ipfs-core-utils/multipart-request';\nimport { configure } from '../lib/configure.js';\nimport { toUrlSearchParams } from '../lib/to-url-search-params.js';\nimport { abortSignal } from '../lib/abort-signal.js';\nexport const createPut = configure(api => {\n  async function put(data) {\n    let options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    const controller = new AbortController();\n    const signal = abortSignal(controller.signal, options.signal);\n    let res;\n\n    try {\n      const response = await api.post('block/put', {\n        signal: signal,\n        searchParams: toUrlSearchParams(options),\n        ...(await multipartRequest([data], controller, options.headers))\n      });\n      res = await response.json();\n    } catch (err) {\n      if (options.format === 'dag-pb') {\n        return put(data, { ...options,\n          format: 'protobuf'\n        });\n      } else if (options.format === 'dag-cbor') {\n        return put(data, { ...options,\n          format: 'cbor'\n        });\n      }\n\n      throw err;\n    }\n\n    return CID.parse(res.Key);\n  }\n\n  return put;\n});","map":{"version":3,"sources":["/home/alex/Documents/gitest/Marketplace/node_modules/ipfs-http-client/esm/src/block/put.js"],"names":["CID","multipartRequest","configure","toUrlSearchParams","abortSignal","createPut","api","put","data","options","controller","AbortController","signal","res","response","post","searchParams","headers","json","err","format","parse","Key"],"mappings":"AAAA,SAASA,GAAT,QAAoB,kBAApB;AACA,SAASC,gBAAT,QAAiC,mCAAjC;AACA,SAASC,SAAT,QAA0B,qBAA1B;AACA,SAASC,iBAAT,QAAkC,gCAAlC;AACA,SAASC,WAAT,QAA4B,wBAA5B;AACA,OAAO,MAAMC,SAAS,GAAGH,SAAS,CAACI,GAAG,IAAI;AACxC,iBAAeC,GAAf,CAAmBC,IAAnB,EAAuC;AAAA,QAAdC,OAAc,uEAAJ,EAAI;AACrC,UAAMC,UAAU,GAAG,IAAIC,eAAJ,EAAnB;AACA,UAAMC,MAAM,GAAGR,WAAW,CAACM,UAAU,CAACE,MAAZ,EAAoBH,OAAO,CAACG,MAA5B,CAA1B;AACA,QAAIC,GAAJ;;AACA,QAAI;AACF,YAAMC,QAAQ,GAAG,MAAMR,GAAG,CAACS,IAAJ,CAAS,WAAT,EAAsB;AAC3CH,QAAAA,MAAM,EAAEA,MADmC;AAE3CI,QAAAA,YAAY,EAAEb,iBAAiB,CAACM,OAAD,CAFY;AAG3C,YAAG,MAAMR,gBAAgB,CAAC,CAACO,IAAD,CAAD,EAASE,UAAT,EAAqBD,OAAO,CAACQ,OAA7B,CAAzB;AAH2C,OAAtB,CAAvB;AAKAJ,MAAAA,GAAG,GAAG,MAAMC,QAAQ,CAACI,IAAT,EAAZ;AACD,KAPD,CAOE,OAAOC,GAAP,EAAY;AACZ,UAAIV,OAAO,CAACW,MAAR,KAAmB,QAAvB,EAAiC;AAC/B,eAAOb,GAAG,CAACC,IAAD,EAAO,EACf,GAAGC,OADY;AAEfW,UAAAA,MAAM,EAAE;AAFO,SAAP,CAAV;AAID,OALD,MAKO,IAAIX,OAAO,CAACW,MAAR,KAAmB,UAAvB,EAAmC;AACxC,eAAOb,GAAG,CAACC,IAAD,EAAO,EACf,GAAGC,OADY;AAEfW,UAAAA,MAAM,EAAE;AAFO,SAAP,CAAV;AAID;;AACD,YAAMD,GAAN;AACD;;AACD,WAAOnB,GAAG,CAACqB,KAAJ,CAAUR,GAAG,CAACS,GAAd,CAAP;AACD;;AACD,SAAOf,GAAP;AACD,CA7BiC,CAA3B","sourcesContent":["import { CID } from 'multiformats/cid';\nimport { multipartRequest } from 'ipfs-core-utils/multipart-request';\nimport { configure } from '../lib/configure.js';\nimport { toUrlSearchParams } from '../lib/to-url-search-params.js';\nimport { abortSignal } from '../lib/abort-signal.js';\nexport const createPut = configure(api => {\n  async function put(data, options = {}) {\n    const controller = new AbortController();\n    const signal = abortSignal(controller.signal, options.signal);\n    let res;\n    try {\n      const response = await api.post('block/put', {\n        signal: signal,\n        searchParams: toUrlSearchParams(options),\n        ...await multipartRequest([data], controller, options.headers)\n      });\n      res = await response.json();\n    } catch (err) {\n      if (options.format === 'dag-pb') {\n        return put(data, {\n          ...options,\n          format: 'protobuf'\n        });\n      } else if (options.format === 'dag-cbor') {\n        return put(data, {\n          ...options,\n          format: 'cbor'\n        });\n      }\n      throw err;\n    }\n    return CID.parse(res.Key);\n  }\n  return put;\n});"]},"metadata":{},"sourceType":"module"}